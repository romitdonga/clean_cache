name: Build and Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            flutter build linux --release
          elif [ "${{ runner.os }}" == "Windows" ]; then
            flutter build windows --release
          elif [ "${{ runner.os }}" == "macOS" ]; then
            flutter build macos --release
          fi
      
      - name: Package macOS app
        if: matrix.os == 'macos-latest'
        run: |
          cd build/macos/Build/Products/Release/
          zip -r ../../../../flutter_space_saver-macos.zip *.app
          cd ../../../../

      - name: Archive Release
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-build
          path: |
            build/linux/x64/release/bundle/
            build/windows/runner/Release/
            flutter_space_saver-macos.zip

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/windows-latest-build/Release.zip
          asset_name: flutter_space_saver-windows.zip
          asset_content_type: application/zip

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/macos-latest-build/flutter_space_saver-macos.zip
          asset_name: flutter_space_saver-macos.zip
          asset_content_type: application/zip

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/ubuntu-latest-build/bundle.zip
          asset_name: flutter_space_saver-linux.zip
          asset_content_type: application/zip

